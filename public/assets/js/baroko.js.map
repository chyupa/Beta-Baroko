{"version":3,"sources":["baroko.module.js","general.filters.js","cart.factory.js","homepage.factory.js","product.factory.js","cart.controller.js","homepage.controller.js","product.controller.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"baroko.js","sourcesContent":["(function () {\n    'use strict';\n\n    angular\n        .module('baroko.front', [\n            'ngAnimate',\n            'toastr'\n        ])\n        .constant('endpoints', {\n            BACK: {\n                GET_PRODUCTS: 'api/getPublicProducts',\n                GET_PRODUCT: 'api/getProduct/',\n\n                ADD_TO_CART: 'api/addToCart',\n                GET_CART_CONTENTS: 'api/getCartContents'\n            }\n        })\n        .constant('extensions', {\n            SINGLE: {\n                METRU: 'metru',\n                BUCATA: 'bucata'\n            },\n            PLURAL: {\n                METRU: 'metrii',\n                BUCATA: 'bucati'\n            }\n        });\n\n})();","(function () {\n    'use strict';\n\n    angular\n        .module('baroko.front')\n        .filter('extension', extension);\n\n    extension.$inject = ['extensions'];\n\n    /**\n     * Filter for using the right singular/plural product extension\n     *\n     * @param extensions\n     * @returns {Function}\n     */\n    function extension(extensions) {\n\n       return function(extension, quantity) {\n           if (extension === extensions.SINGLE.BUCATA) {\n               switch (quantity) {\n                   case 0:\n                       return quantity + ' ' + extensions.PLURAL.BUCATA;\n                   case 1:\n                       return quantity + ' ' + extensions.SINGLE.BUCATA;\n                   default:\n                       return quantity + ' ' + extensions.PLURAL.BUCATA;\n               }\n           } else {\n               switch (quantity) {\n                   case 0:\n                       return quantity + ' ' + extensions.PLURAL.METRU;\n                   case 1:\n                       return quantity + ' ' + extensions.SINGLE.METRU;\n                   default:\n                       return quantity + ' ' + extensions.PLURAL.METRU;\n               }\n           }\n       }\n    }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('baroko.front')\n        .factory('CartFactory', CartFactory);\n\n    CartFactory.$inject = ['endpoints', 'toastr', '$http'];\n\n    function CartFactory(endpoints, toastr, $http) {\n        return {\n            addToCart: addToCart,\n            getCartContents: getCartContents\n        };\n\n        /**\n         * Get product info\n         *\n         * @param string url\n         * @returns {HttpPromise}\n         */\n        function addToCart(data) {\n            return $http.post(endpoints.BACK.ADD_TO_CART, data)\n                .then(addToCartComplete)\n                .catch(addToCartFailed)\n\n            /**\n             * success callback\n             *\n             * @param response\n             * @returns {*}\n             */\n            function addToCartComplete(response) {\n                return response.data;\n            }\n\n            /**\n             * error callback\n             *\n             * @param response\n             */\n            function addToCartFailed(response) {\n                toastr.error(\"Oops something went wrong!\");\n            }\n        }\n\n        /**\n         * Get cart contents\n         *\n         * @returns {HttpPromise}\n         */\n        function getCartContents() {\n            return $http.get(endpoints.BACK.GET_CART_CONTENTS)\n              .then(getCartContentsComplete)\n              .catch(getCartContentsFailed);\n\n            /**\n             * success callback\n             *\n             * @param response\n             * @returns {Object}\n             */\n            function getCartContentsComplete(response) {\n                return response.data;\n            }\n\n            /**\n             * error callback\n             *\n             * @param response\n             */\n            function getCartContentsFailed(response) {\n                toastr.error('Oops something went wrong with your cart!');\n                console.error(response);\n            }\n        }\n    }\n})();","(function() {\n   'use strict';\n\n    angular\n        .module('baroko.front')\n        .factory('HomePageFactory', HomePageFactory);\n\n    HomePageFactory.$inject = ['endpoints', '$http', 'toastr'];\n\n    function HomePageFactory(endpoints, $http, toastr) {\n\n        return {\n            getProducts: getProducts\n        };\n\n        /**\n         * Get all products\n         *\n         * @returns {HttpPromise}\n         */\n        function getProducts() {\n            return $http.get(endpoints.BACK.GET_PRODUCTS)\n                .then(getProductsComplete)\n                .catch(getProductsFailed);\n\n            /**\n             * Return data\n             *\n             * @param response\n             * @returns {*}\n             */\n            function getProductsComplete (response) {\n                return response.data;\n            }\n\n            /**\n             * Show error\n             *\n             * @param response\n             */\n            function getProductsFailed (response) {\n                toastr.error(\"Get Products Failed because: \" + response.data);\n            }\n        }\n    }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('baroko.front')\n        .factory('ProductFactory', ProductFactory);\n\n    ProductFactory.$inject = ['endpoints', 'toastr', '$http'];\n\n    function ProductFactory(endpoints, toastr, $http) {\n        return {\n            getProduct: getProduct\n        };\n\n        /**\n         * Get product info\n         *\n         * @param string url\n         * @returns {HttpPromise}\n         */\n        function getProduct(url) {\n            return $http.get(endpoints.BACK.GET_PRODUCT + url)\n                .then(getProductComplete)\n                .catch(getProductFailed)\n\n            /**\n             * success callback\n             *\n             * @param response\n             * @returns {*}\n             */\n            function getProductComplete(response) {\n                return response.data;\n            }\n\n            /**\n             * error callback\n             *\n             * @param response\n             */\n            function getProductFailed(response) {\n                toastr.error(\"Oops something went wrong!\");\n            }\n        }\n    }\n})();","(function() {\n   'use strict';\n\n    angular\n      .module('baroko.front')\n      .controller('CartController', CartController)\n\n    CartController.$inject = ['toastr', 'CartFactory'];\n\n    function CartController(toastr, CartFactory) {\n        var vm = this;\n\n        activate();\n\n        function activate() {\n            return CartFactory.getCartContents()\n              .then(function(response) {\n                  vm.cartContents = response;\n                  console.log(response);\n              });\n        }\n    }\n})();","(function () {\n   'use strict';\n\n    angular\n        .module('baroko.front')\n        .controller('HomePageController', HomePageController)\n\n    HomePageController.$inject = ['toastr', 'HomePageFactory'];\n\n    function HomePageController(toastr, HomePageFactory) {\n        var vm = this;\n\n        activate();\n\n        /**\n         * Get all products\n         *\n         * @returns {HttpPromise}\n         */\n        function getProducts() {\n            return HomePageFactory.getProducts()\n                .then(function (response) {\n                    vm.products = response.products;;\n                    toastr.success(response.success);\n                })\n        }\n\n        /**\n         * activation function\n         */\n        function activate() {\n            getProducts();\n        }\n    }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('baroko.front')\n        .controller('ProductController', ProductController);\n\n    ProductController.$inject = ['toastr', 'ProductFactory', 'CartFactory', '$location'];\n\n    function ProductController(toastr, ProductFactory, CartFactory, $location) {\n        var vm = this;\n        vm.submitForm = submitForm;\n        vm.addQuantity = addQuantity;\n        vm.removeQuantity = removeQuantity;\n        vm.quantity = 0;\n\n        activate();\n\n        /**\n         * Add one unit\n         *\n         * @returns {number}\n         */\n        function addQuantity() {\n            return ++vm.quantity;\n        }\n\n        /**\n         * Remove one unit\n         *\n         * @returns {number}\n         */\n        function removeQuantity() {\n            return --vm.quantity;\n        }\n\n        /**\n         * Get product info\n         *\n         * @returns {HttpPromise}\n         */\n        function getProductInfo() {\n            return ProductFactory.getProduct(getSlugFromUrl())\n                .then(function(response) {\n                    vm.product = response.product;\n                });\n        }\n\n        function submitForm() {\n\n            /**\n             * send this object to backend in order to save in DB\n             * we also send the price since the price might change and it is best to save this value for the order\n             *\n             * @type {{url: string, quantity: number, price: number}}\n             */\n            var data = {\n                url: getSlugFromUrl(),\n                quantity: vm.quantity,\n                price: vm.product.prices.price\n            };\n\n            /**\n             * call backend to add to cart\n             */\n            return CartFactory.addToCart(data)\n                .then(function (response) {\n                    toastr.success(response.success);\n                });\n        }\n\n        /**\n         * activate controller\n         */\n        function activate() {\n            toastr.success('ProductController activated');\n\n            getProductInfo();\n        }\n\n        /**\n         * helper function for getting the slug\n         *\n         * @returns {string}\n         */\n        function getSlugFromUrl() {\n            return $location.absUrl().split('/').pop();\n        }\n    }\n})();"],"sourceRoot":"/source/"}